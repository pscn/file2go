// Code generated by "file2go -v -d -t -o template/files.go template/*.tmpl"; DO NOT EDIT.

// Encoded files:
// → template/files.tmpl
// → template/files_test.tmpl

package template

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"log"
	"io/ioutil"
)

var container map[string]*[]byte

// decode the base64Encoded string and return a *[]byte for the decoded data
func decode(base64Encoded string) *[]byte {
	gzipEncoded, err := base64.StdEncoding.DecodeString(base64Encoded)
	if err != nil {
		log.Panicf("failed to decode data(BASE64): %s", err)
	}

	var buf bytes.Buffer
	_, err = buf.Write(gzipEncoded)
	if err != nil {
		log.Panicf("failed buffer decode data: %s", err)
	}

	zr, err := gzip.NewReader(&buf)
	if err != nil {
		log.Panicf("failed to create reader from buffer: %s", err)
	}
	defer zr.Close()

	decoded, err := ioutil.ReadAll(zr)
	if err != nil {
		log.Panicf("failed to decode data(GZIP): %s", err)
	}

	return &decoded
}

func init() {
	container = make(map[string]*[]byte)
	
	container["template/files.tmpl"] = decode(`` +
    `H4sICAAAAAAA/2RHVnRjR3hoZEdWY1ptbHNaWE11ZEcxd2JBPT0AnFTRattKEH3Wfs` +
    `VcQYJ0MRJcQi4k+CFxzCUPNwlNoNBgytqaVRZLu2a1SonFvvYD+on9kjKrlWLHbWn7` +
    `YsOszplzzs5snsNMFwglKjTcYgHLF4iFrPCfUkPXZRembGtUtnEuPoerW7i5fYD51f` +
    `VDxliew1ytdIEFEKI5Y11nuCoRsplWlkuFxrk8h6+fvxDXDa/ROdZ1qArn2Iav1rxE` +
    `Orlbl84xJuuNNhYSFsXLF4tNzKJ4peuNwabJy63cUAGppVRlvuQNnp5QSdSW/ipd0p` +
    `/UudStlVXMUsaeuYHVoAZqvnlsrJGqXPz9uKAm3kaBZAPsE0LPOvjqvwWuCjBoW6OA` +
    `QwCC0MYjenABBbeciVatQiX5HlU6wjsWkaVwPAE0Bs6moX92b4t5MJpdebp7j98nTV` +
    `kkhUf+NQUlKyKNKl1md1zJlUhiwWWFBVg9WCSRyeXF/fz0JD2Doyb2jVMWOcYiymrZ` +
    `CvDhZ5etEGhY9LHXNqWj7L2RFpMd4b8qYenZdmUctN+aMQVqkN3gp3fICzTJ8bIVv+` +
    `F1ZZBbBOPBIIyuQ/s3LaMCSdPWZLNKN5ikjEr799GPUkZCLqoq2Zo/zPy/D9d3h4mH` +
    `oToOXZlj/QRJJW2SEvXr7E6h5mtMDkc4ZVHXweHm7YAf43H/4gVMhwkd9jWZPbVq3Y` +
    `NRWfj3JHWu6zL68cuadh2gKsA5kuhfjf7LYQlK+YzKPwOK19ibCN8kQ3VcgSQI90lo` +
    `431K4dcUlZ2AXlPyr+IHgsU5HVHeIbcRoWTlLzTUlawmIGqbzYmf7iS8aEcNKE2qW1` +
    `XEk1Fvuu/q/7b5kbMJbOiaG5BirL1S7vkmlkPvO+s/qg+j9javn09aMk7xfhjBCmrB` +
    `vgUAAP//qDG+Kt4FAAA=`)
	container["template/files_test.tmpl"] = decode(`` +
    `H4sICAAAAAAA/2RHVnRjR3hoZEdWY1ptbHNaWE5mZEdWemRDNTBiWEJzAKSRzW7UMB` +
    `SF17lPcWoJkSCUSCxTzQJ1isSCKYtZVqpMfJNazdgj2xmBIm95AB6RJ0F2h3ZgOvyo` +
    `y8T33POdc5sGF1YxBjbsZGCFT18gej3ym8Finuu3bpg2bIKPUZxjeYXV1RqXy/frmq` +
    `hpsGYftBnQWwdtunFSrJDkvqV5dtIMjPrCmiC1YRdj0+D7129p8UpuOEaaZzYqRtrK` +
    `7k4OnF4+3g0xEunN1rqAkgoR7l0EVUT9ZLpsm7ayCUvLfmXD5WftQxnwaj9bryvMVN` +
    `y8BjuHdoH9eClERYXu8+/FAkaPaa4I9TsZ5NiXYj/YwnGYnGEFY9O0dUkZKR4zZHN/` +
    `5A7spMtGWf5UHw+EB4AP5RyQnv2BFNePkmsBYwN6OxnV4oUXeXvi/ln0E/gfJv+XGh` +
    `X37JB0Zf5OWLlVx53dsSurc/xS5zFlMmnhb+00KtzKHWMrje5eqpSyiFTEsqLi5rGI` +
    `JLi/1n/tOpHvWcHO/jlYKv9EuBPn/z3wwfUPTtY0YNvTjwAAAP//DZuQ9K8DAAA=`)
}

// Content for the given filename
func Content(filename string) (*[]byte, error) {
	if content, ok := container[filename]; ok {
		return content, nil
	}
	return nil, fmt.Errorf("file2go %s not found", filename)
}

// ContentMust for the given filename, panics if filename not found
func ContentMust(filename string) *[]byte {
	content, err := Content(filename)
	if err != nil {
		log.Panic(err)
	}
	return content
}

// eof
