// Code generated by "file2go -v -d -t -o template/files.go template/*.tmpl"; DO NOT EDIT.

// Encoded files:
// → template/files.tmpl
// → template/files_test.tmpl

package template

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"io/ioutil"
)

var container map[string]*[]byte

// decode the base64Encoded string and return a *[]byte for the decoded data
func decode(base64Encoded string) (*[]byte, error) {
	gzipEncoded, err := base64.StdEncoding.DecodeString(base64Encoded)
	if err != nil {
		return nil, fmt.Errorf("failed to decode data(BASE64): %s", err)
	}

	var buf bytes.Buffer
	_, err = buf.Write(gzipEncoded)
	if err != nil {
		return nil, fmt.Errorf("failed buffer decode data: %s", err)
	}

	zr, err := gzip.NewReader(&buf)
	if err != nil {
		return nil, fmt.Errorf("failed to create reader from buffer: %s", err)
	}
	defer zr.Close()

	decoded, err := ioutil.ReadAll(zr)
	if err != nil {
		return nil, fmt.Errorf("failed to decode data(GZIP): %s", err)
	}

	return &decoded, nil
}

func init() {
	container = make(map[string]*[]byte)
	var err error
	
	container["template/files.tmpl"], err = decode(`` +
    `H4sICAAAAAAA/2RHVnRjR3hoZEdWY1ptbHNaWE11ZEcxd2JBPT0ArFTRatw6EH22vm` +
    `KuIUG+LDZcQi4k7EOyWUoemoQmUGhYinY1csTa0iLLKVmj135AP7FfUiTLm91s0kLo` +
    `iw0jzdE5M2emKGCiOUKJCg2zyGH+BKmQFf5Xaui6/MyUbY3KNs6lp3BxDVfXdzC9uL` +
    `zLCSkKmKqF5sjBZzQnpOsMUyVCPtHKMqnQOFcU8PP7D491xWp0jnQdKu4cWbHFkpXo` +
    `T26WpXOEyHqljQVKknT+ZLFJSZIudL0y2DRFuZYrH0D/pFRlMWcNHh/5kKit/0ldSN` +
    `1aWaUkI+SRGVgMNKBmq/vGGqnK2b/3M48e+HP0/ME+IPRwg6D+LjDFwaBtjQIGMRGE` +
    `NiGjT+bAmWVEtGoRI/Q1qAxozB8BGqNNBh1JvKh4L4ThZByJ5LeWT6PU/CLg3gagXf` +
    `SMJFKEzH/GoGTlQZPIWMlqBKK2+dS/J2gqmKyQg9WDbs+cnp/dTo+PshM4aNJAIiOJ` +
    `IyTxBZy3AkIr8vNWCDQk+drzHPuj/LORFumWiPfQmQfkbUp7VNZmUx3/WH6F3z4h42` +
    `jo4bwV76zBwiCzCCYAgTC6jlRePJ9w9PzWJp9UukGaER/a7Vnvu9yTOqsqujZ/oS8f` +
    `vlze7HclYhxuGChZEUd6/0klLQ3Genb+GGq2RLo/AFnfYs8xGJIkXQf787uFdZ9upj` +
    `idDT6Inh9Gn04eWrXsEVBZ+P8oc67rcv8Jc/9qZVZMyQWNKrsOUHFwzusKG6qHGuau` +
    `lI+owspRrMZeebxDh+hvp06KsBlQ2RHope/fs8QBYHbqj7a6tsnwBfe2eLObcXseNK` +
    `C0Z90qno42fLNdVR/b5i1lIwhlaUCKTewZcke3R9nXPiys6IfAPhr2Zb3+3BXyohBR` +
    `BmpBfgUAAP//AGBoyEYGAAA=`)
	if err != nil {
		panic(err)
	}
	container["template/files_test.tmpl"], err = decode(`` +
    `H4sICAAAAAAA/2RHVnRjR3hoZEdWY1ptbHNaWE5mZEdWemRDNTBiWEJzAKSRzW7UMB` +
    `SF17lPcWoJkSCUSCxTzQJ1isSCKYtZVqpMfJNazdgj2xmBIm95AB6RJ0F2h3ZgOvyo` +
    `y8T33POdc5sGF1YxBjbsZGCFT18gej3ym8Finuu3bpg2bIKPUZxjeYXV1RqXy/frmq` +
    `hpsGYftBnQWwdtunFSrJDkvqV5dtIMjPrCmiC1YRdj0+D7129p8UpuOEaaZzYqRtrK` +
    `7k4OnF4+3g0xEunN1rqAkgoR7l0EVUT9ZLpsm7ayCUvLfmXD5WftQxnwaj9bryvMVN` +
    `y8BjuHdoH9eClERYXu8+/FAkaPaa4I9TsZ5NiXYj/YwnGYnGEFY9O0dUkZKR4zZHN/` +
    `5A7spMtGWf5UHw+EB4AP5RyQnv2BFNePkmsBYwN6OxnV4oUXeXvi/ln0E/gfJv+XGh` +
    `X37JB0Zf5OWLlVx53dsSurc/xS5zFlMmnhb+00KtzKHWMrje5eqpSyiFTEsqLi5rGI` +
    `JLi/1n/tOpHvWcHO/jlYKv9EuBPn/z3wwfUPTtY0YNvTjwAAAP//DZuQ9K8DAAA=`)
	if err != nil {
		panic(err)
	}
}

// Content for the given filename
func Content(filename string) (*[]byte, error) {
	if content, ok := container[filename]; ok {
		return content, nil
	}
	return nil, fmt.Errorf("file2go %s not found", filename)
}

// ContentMust for the given filename, panics if filename not found
func ContentMust(filename string) *[]byte {
	content, err := Content(filename)
	if err != nil {
		panic(err)
	}
	return content
}

// eof
